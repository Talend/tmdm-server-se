<?xml version="1.0" encoding="UTF-8"?>
<project name="Webapp core" xmlns:artifact="antlib:org.apache.maven.artifact.ant" default="all">

    <property file="build.properties" />

    <target name="prepare-maven" if="local.developer.build">
        <path id="maven-ant-tasks.classpath" path="${maven.ant.tasks.file}" />
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />
    </target>

    <property name="version.props" value="version.properties" />

    <property name="jar" value="z.mdm.common.commons.core" />
    <!--<property name="war" value="zz.20.commons.core"/>-->

    <property name="build.dir" value="${basedir}/target" />
    <property name="jboss.dir" value="${jboss.dir}" />
    <property name="jboss.instance.dir" value="${jboss.dir}/server/default" />
    <property name="jboss.instance.lib" value="${jboss.instance.dir}/lib"/>
    <property name="jboss.deploy.dir" value="${jboss.instance.dir}/deploy" />
	
    <property name="tom.location" value="${basedir}/.." />

    <!-- =================================
          target: all
         ================================= -->
    <target name="all" depends="clean,package,undeploy,deploy" description="-->webapp core">
        <!--eclipse.refreshLocal resource="${basedir}"/-->
    </target>

    <target name="clean">
        <antcall target="mvn.invoke">
            <param name="mvn.goal" value="clean" />
        </antcall>
    </target>
    
    <target name="compile" depends="test">
        <antcall target="mvn.invoke">
            <param name="mvn.goal" value="compile" />
        </antcall>
        
        <antcall target="mvn.invoke">
            <param name="mvn.goal" value="test-compile" />
        </antcall>

        <copy todir="bin">
           <fileset dir="target/classes" includes="**" />
           <fileset dir="target/test-classes" includes="**" />
        </copy>
    </target>
    
    <target name="test">
        <antcall target="mvn.invoke">
            <param name="mvn.goal" value="test" />
        </antcall>
    </target>
	
    <target name="package" depends="compile">

        <delete>
            <fileset dir="." includes="${jar}*.jar" />
            <!--<fileset dir="." includes="${war}*.war"/>-->
        </delete>

        <propertyfile file="${version.props}">
            <entry key="build.date" type="date" value="now" />
            <entry key="built.by" type="string" value="${user.name}" />
            <entry key="java.version" type="string" value="${java.vm.version}" />
            <entry key="build.number" default="0" type="int" operation="+" value="1" />
        </propertyfile>
        <property file="${version.props}" />

        <copy file="RELEASE.NOTES" tofile="RELEASE-${major}.${minor}.${rev}_${build.number}.NOTES" />
        <jar destfile="${jar}.jar">
            <zipfileset dir=".">
                <include name="version.properties" />
                <include name="RELEASE-${major}.${minor}.${rev}_${build.number}.NOTES" />
            </zipfileset>
            <zipfileset dir="bin">
                <include name="**/*.class" />
                <exclude name="org/talend/mdm/commmon/util/datamodel/management/*Test.class" />
                <exclude name="org/talend/mdm/commmon/util/datamodel/management/*TestCase/class" />
                <exclude name="org/talend/mdm/commmon/util/datamodel/management/*TestMock.class" />
            </zipfileset>
        </jar>
        <!--
		<jar destfile="${war}-${major}.${minor}.${rev}_${build.number}.war">
			<zipfileset dir="src/WEB-INF" prefix="WEB-INF">
				<include name="web.xml" />
			</zipfileset>
			<zipfileset dir="src/WEB-INF" prefix="WEB-INF">
				<include name="jboss-web.xml" />
			</zipfileset>
			<zipfileset dir=".">
				<include name="version.properties" />
				<include name="RELEASE-${major}.${minor}.${rev}_${build.number}.NOTES" />
			</zipfileset>
			<zipfileset dir="bin">
				<include name="**/webapp/**/*.class"/>
			</zipfileset>
			<zipfileset dir="web" includes="**/*" />
			<zipfileset dir="Resources" prefix="WEB-INF/Resources" includes="**/*"/>
		</jar>
		-->
        <delete file="RELEASE-${major}.${minor}.${rev}_${build.number}.NOTES" />


    </target>

    <target name="undeploy" description="--> remove packages">
        <property file="${version.props}" />
        <delete>
            <fileset dir="${jboss.instance.lib}" includes="${jar}*.jar" />
            <!-- <fileset dir="${jboss.deploy.dir}" includes="${war}*.war"/> -->
            <!-- XML server interfaces have been incorporated here 
			<fileset dir="${jboss.instance.lib}" includes="z.com.amalto.xmlserver.jar"/>
			-->
        </delete>
    </target>

    <target name="deploy">
        <property file="${version.props}" />
        <echo>Deploying ${major}.${minor}.${rev}-${build.number}</echo>
        <copy file="${jar}.jar" tofile="${jboss.instance.lib}/${jar}.jar" />
        <!--<copy
			file="${war}-${major}.${minor}.${rev}_${build.number}.war"
			tofile="${jboss.deploy.dir}/${war}-${major}.${minor}.${rev}_${build.number}.war"/>
			-->
    </target>

    <target name="mvn.invoke" description="invokes maven" depends="prepare-maven">
        <property environment="env" />

        <artifact:mvn pom="pom.xml" mavenHome="${env.M2_HOME}" fork="true" failonerror="true">
            <arg value="-V" />
            <arg value="-Dmdm.build.dir=${build.dir}" />
            <arg value="-Dmdm.build.version=${mdm.build.version}" />
            <arg value="-Ddev.mode.excluded.start=${dev.mode.excluded.start}" />
            <arg value="-Ddev.mode.excluded.end=${dev.mode.excluded.end}" />
            <arg value="${mvn.goal}" />
        </artifact:mvn>
    </target>
</project>

