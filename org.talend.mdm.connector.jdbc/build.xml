<?xml version="1.0" encoding="UTF-8"?>
<!-- ======================================================================                                                        

     Talend Connectors
     Jdbc Connector
                                                                                   
     ====================================================================== -->
<project name="Jdbc Connector" xmlns:artifact="antlib:org.apache.maven.artifact.ant" default="all">

    <!-- add ant-contrib.jar
      <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
          <pathelement location="${basedir}/../org.talend.mdm.nsis/svnkit/ant-contrib-1.0b3.jar"/>
        </classpath>
      </taskdef>-->
	
    <property file="build.properties" />

    <target name="prepare-maven" if="local.developer.build">
        <path id="maven-ant-tasks.classpath" path="${maven.ant.tasks.file}" />
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />
    </target>
        	
	<property name="version.props" value="version.properties" />

	<property name="jar" value="jdbc.jar" />
	<property name="rar" value="zz.20.mdm.connector.jdbc.rar" />
	<property name="mdb" value="zz.20.mdm.connector.jdbc-mdb.ejb.jar" />
	<property name="ds" value="zz.20.mdm.connector.jdbc-ds.xml" />
	<!-- ================================= 
	
		DO NOT CHANGE ANYTHING BELOW HERE
	 
         ================================= -->
	
    <property name="build.dir" value="${basedir}/target" />
    <property name="jboss.dir" value="${jboss.dir}" />
    <property name="jboss.instance.dir" value="${jboss.dir}/server/default" />
    <property name="jboss.instance.lib" value="${jboss.instance.dir}/lib"/>
    <property name="jboss.deploy.dir" value="${jboss.instance.dir}/deploy" />
	
	<target name="all" depends="clean,version,package,undeploy,deploy">
		<!--eclipse.refreshLocal resource="../" /-->
	</target>

    <target name="clean" description="Clean old release">
        <delete dir="zz.20.ext.imageserver.war"/>
                <delete dir="${jboss.deploy.dir}/zz.20.ext.imageserver.war"/>
        <antcall target="mvn.invoke">
            <param name="mvn.goal" value="clean" />
        </antcall>
        
    </target>
    
    <target name="compile">
        <antcall target="mvn.invoke">
            <param name="mvn.goal" value="compile" />
        </antcall>

        <copy todir="bin">
           <fileset dir="target/classes" includes="**" />
        </copy>
    </target>
	
	<target name="version" description="Maintain build.date property">
		<buildnumber file="${version.props}" />
		<propertyfile file="${version.props}">
			<entry key="build.date" type="date" value="now" />
		</propertyfile>
	</target>

	<target name="package" depends="compile">
		<property file="${version.props}" />
		<copy file="RELEASE.NOTES" tofile="RELEASE-${major}.${minor}.${rev}-${build.number}.NOTES">
		</copy>

		<jar destfile="${jar}">
			<zipfileset dir="bin" includes="**/eis/**/*.class" />
			<zipfileset dir="bin" includes="**/ra/**/*.class" />
			<zipfileset dir="bin" includes="**/util/**/*.class" />
		</jar>

		<jar destfile="${rar}">
			<zipfileset dir="src/META-INF" prefix="META-INF">
				<include name="ra.xml" />
			</zipfileset>
			<zipfileset dir=".">
				<include name="${jar}" />
				<include name="RELEASE-${major}.${minor}.${rev}-${build.number}.NOTES" />
				<include name="${version.props}" />
			</zipfileset>
			<!--
			<zipfileset dir="src/META-INF" prefix="META-INF">
				<include name="ds.xml" />
			</zipfileset>
			-->
		</jar>       
		<antcall target="package.mdb.jar"></antcall>
		<delete file="RELEASE-${major}.${minor}.${rev}-${build.number}.NOTES" />
	</target>
	
	<!-- ================================= 
          target: name              
         ================================= -->
    <target name="package.mdb.jar"  description="--> package.mdb.jar">
	      <if>
	         <equals arg1="${ear.name}" arg2="tom.ear" />
	         <then>
	            <antcall target="package.tom.jar"></antcall>
	         </then>
	         <elseif>
	          <equals arg1="${ear.name}" arg2="tem.ear" />
	          <then>
	            <antcall target="package.tem.jar"></antcall>
	          </then>
	         </elseif>
	         <else>
	            <antcall target="package.jar"></antcall>      
	         </else>
	     </if>               
    </target>

    <target name="package.tom.jar" description="--> package.tom.jar">
        <jar destfile="${mdb}">
            <zipfileset dir="src/META-INF" prefix="META-INF">
                <include name="ejb-jar.xml" />
            </zipfileset>   
            <zipfileset dir="src/META-INF/tom" prefix="META-INF">
                <include name="jboss.xml" />
            </zipfileset>               
            <zipfileset dir="bin" includes="**/mdb/**/*.class" />
            <zipfileset dir=".">
                <include name="RELEASE-${major}.${minor}.${rev}-${build.number}.NOTES" />
                <include name="${version.props}" />
            </zipfileset>
        </jar>       
    </target>
	
    <target name="package.tem.jar" description="--> package.tem.jar">
        <jar destfile="${mdb}">
            <zipfileset dir="src/META-INF" prefix="META-INF">
                <include name="ejb-jar.xml" />
            </zipfileset>   
            <zipfileset dir="src/META-INF/tem" prefix="META-INF">
                <include name="jboss.xml" />
            </zipfileset>               
            <zipfileset dir="bin" includes="**/mdb/**/*.class" />
            <zipfileset dir=".">
                <include name="RELEASE-${major}.${minor}.${rev}-${build.number}.NOTES" />
                <include name="${version.props}" />
            </zipfileset>
        </jar>       
    </target>
    <target name="package.jar" description="--> package.jar">
        <jar destfile="${mdb}">
            <zipfileset dir="src/META-INF" prefix="META-INF">
                <include name="ejb-jar.xml" />
            </zipfileset>   
            <zipfileset dir="src/META-INF" prefix="META-INF">
                <include name="jboss.xml" />
            </zipfileset>               
            <zipfileset dir="bin" includes="**/mdb/**/*.class" />
            <zipfileset dir=".">
                <include name="RELEASE-${major}.${minor}.${rev}-${build.number}.NOTES" />
                <include name="${version.props}" />
            </zipfileset>
        </jar>       
    </target>	
	<target name="undeploy" description="--> remove packages">
		<delete>
			<fileset dir="${jboss.deploy.dir}" includes="${mdb}" />
		</delete>
		<sleep seconds="2" />
		<!-- wait for endpoint deactivation to complete -->
		<delete>
			<fileset dir="${jboss.deploy.dir}" includes="${rar}" />
			<fileset dir="${jboss.deploy.dir}" includes="${ds}" />
		</delete>
		<sleep seconds="5" />
	</target>

	
	
	<target name="deploy">
		<property file="${version.props}" />
		<echo>Deploying build: ${major}.${minor}.${rev}-${build.number}</echo>
		<copy file="${rar}" tofile="${jboss.deploy.dir}/${rar}" />
		<copy file="${mdb}" tofile="${jboss.deploy.dir}/${mdb}" />
        <if>
           <equals arg1="${ear.name}" arg2="tom.ear" />
           <then>
           	<copy file="src/META-INF/tom/ds.xml" tofile="${jboss.deploy.dir}/${ds}" />
           </then>
           <elseif>
            <equals arg1="${ear.name}" arg2="tem.ear" />
            <then>
            	<copy file="src/META-INF/tem/ds.xml" tofile="${jboss.deploy.dir}/${ds}" />
            </then>
           </elseif>
           <else>
           	<copy file="src/META-INF/ds.xml" tofile="${jboss.deploy.dir}/${ds}" />      
           </else>
       </if> 				
		<copy todir="${jboss.instance.lib}" overwrite="true">
			<fileset dir="lib-drivers">
				<include name="**/*.jar"/>
			</fileset>
		</copy>
	</target>

    <target name="mvn.invoke" description="invokes maven" depends="prepare-maven">
        <property environment="env" />

        <artifact:mvn pom="pom.xml" mavenHome="${env.M2_HOME}" fork="true" failonerror="true">
            <arg value="-V" />
            <arg value="-Dmdm.build.dir=${build.dir}" />
            <arg value="-Dmdm.build.version=${mdm.build.version}" />
            <arg value="-Ddev.mode.excluded.start=${dev.mode.excluded.start}" />
            <arg value="-Ddev.mode.excluded.end=${dev.mode.excluded.end}" />
            <arg value="${mvn.goal}" />
        </artifact:mvn>
    </target>
</project>
