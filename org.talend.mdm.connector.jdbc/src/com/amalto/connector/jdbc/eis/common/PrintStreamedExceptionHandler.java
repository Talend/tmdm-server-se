
package com.amalto.connector.jdbc.eis.common;

import org.apache.log4j.Logger;


/**
 * Implementation of {@link ExceptionHandler} that writes exception details
 * to the object's print streams.
 *
 */
public class PrintStreamedExceptionHandler
  extends BasicPrintStreamed
  implements ExceptionHandler
{
  
  //----------------------------------------------------------------------------
  // Static variables
  //----------------------------------------------------------------------------
  
  private static Logger logger = Logger.getLogger(PrintStreamedExceptionHandler.class);
  
  //----------------------------------------------------------------------------
  // Static methods
  //----------------------------------------------------------------------------
  
  //----------------------------------------------------------------------------
  // Constants
  //----------------------------------------------------------------------------
  
  //----------------------------------------------------------------------------
  // Instance variables
  //----------------------------------------------------------------------------
  
  //----------------------------------------------------------------------------
  // Constructors
  //----------------------------------------------------------------------------
  
  /**
   * Constructs a new instance of
   * <code>PrintStreamedExceptionHandler</code>.
   */
  public PrintStreamedExceptionHandler()
  {
  }
  
  //----------------------------------------------------------------------------
  // Interface implementations
  //----------------------------------------------------------------------------
  //----------------------------------------------------------------------------
  // Implementation of interface ExceptionHandler
  //----------------------------------------------------------------------------
  
  /**
   * {@inheritDoc}
   */
  public void handleException(final Exception e)
  {
    Throwable cause = e;
    while(cause.getCause() != null)
    {
      cause = cause.getCause();
    }
    this.println("");
    this.println(cause.getMessage());
    this.println("");
    
    this.flushLocalBuffer();
  }
  
  //----------------------------------------------------------------------------
  // Extends overrides
  //----------------------------------------------------------------------------
  //----------------------------------------------------------------------------
  // Override of class Class1
  //----------------------------------------------------------------------------
  
  
  //----------------------------------------------------------------------------
  // Public methods exposed by this class
  //----------------------------------------------------------------------------
  
  //----------------------------------------------------------------------------
  // Protected abstract methods
  //----------------------------------------------------------------------------
  
  //----------------------------------------------------------------------------
  // Protected methods for use by subclasses
  //----------------------------------------------------------------------------
  
  //----------------------------------------------------------------------------
  // Other methods
  //----------------------------------------------------------------------------
  
  //----------------------------------------------------------------------------
  // Member classes
  //----------------------------------------------------------------------------
  
}
