<?xml version="1.0" encoding="UTF-8"?>

<!-- mdm Connector : logging -->


<project name="logging" xmlns:artifact="antlib:org.apache.maven.artifact.ant" default="all">
	<property file="build.properties" />
    <!-- if you run it by eclipse, please setup the taskdef.
    <taskdef resource="net/sf/antcontrib/antlib.xml" classpath="${basedir}/../org.talend.mdm.nsis/svnkit/ant-contrib-1.0b3.jar" onerror="ignore"/>
    -->
    <target name="prepare-maven" if="local.developer.build">
        <path id="maven-ant-tasks.classpath" path="${maven.ant.tasks.file}" />
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />
    </target>
	
	<property name="version.props" value="version.properties"/>
	<property name="build.dir" value="${basedir}/target" />
    <property name="mdm.build.version" value="${major}.${minor}.${rev}-r${svn.revision}" />
    <property name="dev.mode.excluded.start" value="" />
    <property name="dev.mode.excluded.end" value="" />
	<property name="jboss.dir" value="c:/opt/jboss"/>
	<property name="jboss.instance.dir" value="${jboss.dir}/server/default"/>
	<property name="jboss.deploy.dir" value="${jboss.instance.dir}/deploy"/>
	<property name="jboss.instance.lib" value="${jboss.instance.dir}/lib"/>
	
	<property name="ds" value="zz.20.mdm.connector.logging-ds.xml" />
    <property name="jar" value="logging.jar" />
    <property name="rar" value="zz.20.mdm.connector.logging.rar" />
    <property name="mdb" value="zz.20.mdm.connector.logging-mdb.ejb.jar" />
    <property name="buildtype" value="" />	
	<target name="all" depends="clean,version,package,undeploy,deploy" />
	
    <target name="clean">
        <antcall target="mvn.invoke">
            <param name="mvn.goal" value="clean" />
        </antcall>
    </target>

    <target name="install">
        <antcall target="mvn.invoke">
            <param name="mvn.goal" value="install" />
        </antcall>
    </target>
    
    <target name="compile">
        <antcall target="mvn.invoke">
            <param name="mvn.goal" value="compile" />
        </antcall>
        <copy todir="bin">
            <fileset dir="target/classes" includes="**" />
        </copy>
    </target>
	
	<target name="version">
		<propertyfile file="${version.props}">
			<entry key="build.date" type="date" value="now" />
		</propertyfile>
	</target>
	
	
	<target name="package" depends="compile">
		<delete file="logging.jar"/>
		<buildnumber file="${version.props}"/>
		<property file="${version.props}" />
		<property name="version.build.new" value="${major}-${minor}-${rev}_${build.number}"  />
		<jar destfile="logging.jar">
			<zipfileset dir="bin/com/amalto/connector/logging/eis" prefix="com/amalto/connector/logging/eis" />
			<zipfileset dir="bin/com/amalto/connector/logging/ra" prefix="com/amalto/connector/logging/ra" includes="**/*.class" />
		</jar>
		<jar destfile="${rar}">
			<zipfileset dir="src/META-INF" prefix="META-INF">
				<include name="ra.xml" />
			</zipfileset>
			<zipfileset dir=".">
				<include name="logging.jar" />
			</zipfileset>
			<zipfileset dir=".">
				<include name="RELEASE.NOTES" />
			</zipfileset>
			<zipfileset dir=".">
				<include name="version.properties" />
			</zipfileset>
			<!--
            <zipfileset dir="src/META-INF" prefix="META-INF">
                <include name="ds.xml" />
            </zipfileset>	
            -->		
		</jar>
		<antcall target="package.mdb.jar"></antcall>
		<!--eclipse.refreshLocal resource="${basedir}"/-->
	</target>
	
    <!-- ================================= 
          target: name              
         ================================= -->
    <target name="package.mdb.jar"  description="--> package.mdb.jar">
          <if>
             <equals arg1="${ear.name}" arg2="tom.ear" />
             <then>
                <antcall target="package.tom.jar"></antcall>
             </then>
             <elseif>
              <equals arg1="${ear.name}" arg2="tem.ear" />
              <then>
                <antcall target="package.tem.jar"></antcall>
              </then>
             </elseif>
             <else>
                <antcall target="package.jar"></antcall>      
             </else>
         </if>               
    </target>

    <target name="package.tom.jar" description="--> package.tom.jar">
        <jar destfile="${mdb}">
            <zipfileset dir="src/META-INF" prefix="META-INF">
                <include name="ejb-jar.xml" />
            </zipfileset>   
            <zipfileset dir="src/META-INF/tom" prefix="META-INF">
                <include name="jboss.xml" />
            </zipfileset>               
            <zipfileset dir="bin" includes="**/mdb/**/*.class" />
            <zipfileset dir=".">
                <include name="RELEASE-${major}.${minor}.${rev}-${build.number}.NOTES" />
                <include name="${version.props}" />
            </zipfileset>
        </jar>       
    </target>
    
    <target name="package.tem.jar" description="--> package.tem.jar">
        <jar destfile="${mdb}">
            <zipfileset dir="src/META-INF" prefix="META-INF">
                <include name="ejb-jar.xml" />
            </zipfileset>   
            <zipfileset dir="src/META-INF/tem" prefix="META-INF">
                <include name="jboss.xml" />
            </zipfileset>               
            <zipfileset dir="bin" includes="**/mdb/**/*.class" />
            <zipfileset dir=".">
                <include name="RELEASE-${major}.${minor}.${rev}-${build.number}.NOTES" />
                <include name="${version.props}" />
            </zipfileset>
        </jar>       
    </target>
    <target name="package.jar" description="--> package.jar">
        <jar destfile="${mdb}">
            <zipfileset dir="src/META-INF" prefix="META-INF">
                <include name="ejb-jar.xml" />
            </zipfileset>   
            <zipfileset dir="src/META-INF" prefix="META-INF">
                <include name="jboss.xml" />
            </zipfileset>               
            <zipfileset dir="bin" includes="**/mdb/**/*.class" />
            <zipfileset dir=".">
                <include name="RELEASE-${major}.${minor}.${rev}-${build.number}.NOTES" />
                <include name="${version.props}" />
            </zipfileset>
        </jar>       
    </target>   
	
	<target name="undeploy">		
		<delete>
			<fileset dir="${jboss.deploy.dir}" includes="zz.*.mdm.connector.logging-mdb.*.*"/>
		</delete>
		<sleep seconds="2"/> <!-- wait for endpoint deactivation to complete -->
		<delete>
			<fileset dir="${jboss.deploy.dir}" includes="zz.*.mdm.connector.logging.*"/>
			<fileset dir="${jboss.deploy.dir}" includes="zz.20.mdm.connector.logging-ds.xml"/>
		</delete>
		<sleep seconds="5"/>
	</target>
	
	
	<target name="deploy">
		<echo>Deploying build: ${version.build.new}</echo>
		<copy file="zz.20.mdm.connector.logging.rar" tofile="${jboss.deploy.dir}/zz.20.mdm.connector.logging.rar"/>
		<copy file="zz.20.mdm.connector.logging-mdb.ejb.jar" tofile="${jboss.deploy.dir}/zz.20.mdm.connector.logging-mdb.ejb.jar"/>		
        <if>
           <equals arg1="${ear.name}" arg2="tom.ear" />
           <then>
            <copy file="src/META-INF/tom/ds.xml" tofile="${jboss.deploy.dir}/${ds}" />
           </then>
           <elseif>
            <equals arg1="${ear.name}" arg2="tem.ear" />
            <then>
                <copy file="src/META-INF/tem/ds.xml" tofile="${jboss.deploy.dir}/${ds}" />
            </then>
           </elseif>
           <else>
            <copy file="src/META-INF/ds.xml" tofile="${jboss.deploy.dir}/${ds}" />      
           </else>
       </if> 		
	</target>
	
    <target name="mvn.invoke" description="invokes maven" depends="prepare-maven">
        <property environment="env" />

        <artifact:mvn pom="pom.xml" mavenHome="${env.M2_HOME}" fork="true" failonerror="true">
            <arg value="-V" />
            <arg value="-Dmdm.build.dir=${build.dir}" />
            <arg value="-Dmdm.build.version=${mdm.build.version}" />
            <arg value="-Ddev.mode.excluded.start=${dev.mode.excluded.start}" />
            <arg value="-Ddev.mode.excluded.end=${dev.mode.excluded.end}" />
            <arg value="${mvn.goal}" />
        </artifact:mvn>
    </target>
	
</project>
