<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     20 dÃ©c. 2005 09:21:22                                                        

     Xtentis Core
     Core Modules of Xtentis
                   
     bgrieder                                                                
     ====================================================================== -->
<project name="XtentisCore - Build" xmlns:artifact="antlib:org.apache.maven.artifact.ant" default="all">
    <description>
            Xtentis Core
    </description>

    <property file="build.properties" />

    <target name="prepare-maven" if="local.developer.build">
        <path id="maven-ant-tasks.classpath" path="${maven.ant.tasks.file}" />
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />
    </target>
	
	<property name="version.props" value="version.properties"/>

    <property name="build.dir" value="${basedir}/target" />
    <property name="jboss.dir" value="${jboss.dir}" />
    <property name="jboss.instance.dir" value="${jboss.dir}/server/default" />
    <property name="jboss.instance.lib" value="${jboss.instance.dir}/lib"/>
    <property name="jboss.deploy.dir" value="${jboss.instance.dir}/deploy" />
    <property name="jboss.lib.dir" value="${jboss.instance.dir}/lib"/>
    <property name="jboss.bin.dir" value="${jboss.dir}/bin"/>


	<property name="webservice" value="zz.20.dopen.jar"/>


    <!-- ================================= 
          target: all              
         ================================= -->
	<target name="all" depends="clean,version,package,undeploy,deploy">
		<!-- <eclipse.refreshLocal resource="${basedir}"/> -->
	</target>
	
    <target name="clean">
        <antcall target="mvn.invoke">
            <param name="mvn.goal" value="clean" />
        </antcall>
    </target>
    
    <target name="compile">
        <antcall target="mvn.invoke">
            <param name="mvn.goal" value="compile" />
        </antcall>

        <copy todir="bin">
           <fileset dir="target/classes" includes="**" />
        </copy>
    </target>
	
   	<target name="version"  description="Maintain build.date property">
   		<buildnumber file="${version.props}" />
       	<propertyfile file="${version.props}">
       		<entry key="build.date" type="date" value="now" />
       	</propertyfile>   	
     </target>

   	<target name="package" depends="compile">
  
   		<jar destfile="${webservice}" manifest="src/META-INF/MANIFEST.MF">
   		            <zipfileset dir=".">
   		                <include name="RELEASE.NOTES" />
   		            </zipfileset>
   		            <zipfileset dir=".">
   		                <include name="version.properties" />
   		            </zipfileset>
                <zipfileset dir="bin" includes="**/*.class" />
                 <zipfileset dir="src" excludes="**/*.java"/>
   		</jar>  		  		
    </target>

		
    <target name="undeploy" description="remove packages">		
		<delete>
			<fileset dir="${jboss.deploy.dir}" includes="${webservice}"/>
		</delete>
    </target>
	
	<target name="deploy">
		<echo>Deploying ${webservice}</echo>
		
		<copy file="${webservice}" tofile="${jboss.deploy.dir}/${webservice}"/>	 

    </target>
	
	<target name="doc">
		 <delete file="doc/webservice_api_doc.html"/>
	     <xslt in="doc/webservices-allinone.wsdl" out="doc/webservice_api_doc.html" style="doc/wsdl-viewer.xsl">
	          <outputproperty name="method" value="html"/>
	          <outputproperty name="encoding" value="UTF-8"/>
	          <outputproperty name="indent" value="yes"/>
	     </xslt>
	</target>

    <target name="mvn.invoke" description="invokes maven" depends="prepare-maven">
        <property environment="env" />

        <artifact:mvn pom="pom.xml" mavenHome="${env.M2_HOME}" fork="true" failonerror="true">
            <arg value="-V" />
            <arg value="-Dmdm.build.dir=${build.dir}" />
            <arg value="-Dmdm.build.version=${mdm.build.version}" />
            <arg value="-Ddev.mode.excluded.start=${dev.mode.excluded.start}" />
            <arg value="-Ddev.mode.excluded.end=${dev.mode.excluded.end}" />
            <arg value="${mvn.goal}" />
        </artifact:mvn>
    </target>
</project>
