/*
 * Generated by XDoclet - Do not edit!
 */
package com.amalto.core.objects.backgroundjob.ejb.remote;

/**
 * Remote interface for BackgroundJobCtrl.
 * @xdoclet-generated
 * @copyright The XDoclet Team
 * @author XDoclet
 * @version ${version}
 */
public interface BackgroundJobCtrl
   extends javax.ejb.EJBObject
{
   /**
    * Creates or updates a BackgroundJob
    * @throws XtentisException
    */
   public com.amalto.core.objects.backgroundjob.ejb.BackgroundJobPOJOPK putBackgroundJob( com.amalto.core.objects.backgroundjob.ejb.BackgroundJobPOJO backgroundJob )
      throws com.amalto.core.util.XtentisException, java.rmi.RemoteException;

   /**
    * Get Background Job
    * @throws XtentisException
    */
   public com.amalto.core.objects.backgroundjob.ejb.BackgroundJobPOJO getBackgroundJob( com.amalto.core.objects.backgroundjob.ejb.BackgroundJobPOJOPK pk )
      throws com.amalto.core.util.XtentisException, java.rmi.RemoteException;

   /**
    * Get a BackgroundJob - no exception is thrown: returns null if not found
    * @throws XtentisException
    */
   public com.amalto.core.objects.backgroundjob.ejb.BackgroundJobPOJO existsBackgroundJob( com.amalto.core.objects.backgroundjob.ejb.BackgroundJobPOJOPK pk )
      throws com.amalto.core.util.XtentisException, java.rmi.RemoteException;

   /**
    * Remove an Background Job
    * @throws XtentisException
    */
   public com.amalto.core.objects.backgroundjob.ejb.BackgroundJobPOJOPK removeBackgroundJob( com.amalto.core.objects.backgroundjob.ejb.BackgroundJobPOJOPK pk )
      throws com.amalto.core.util.XtentisException, java.rmi.RemoteException;

   /**
    * Retrieve all BackgroundJob PKs
    * @throws XtentisException
    */
   public java.util.Collection getBackgroundJobPKs( java.lang.String regex )
      throws com.amalto.core.util.XtentisException, java.rmi.RemoteException;

}
