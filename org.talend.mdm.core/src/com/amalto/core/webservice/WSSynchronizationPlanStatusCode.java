// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation （1.1.2_01，编译版 R40）
// Generated source version: 1.1.2

package com.amalto.core.webservice;


import java.util.Map;
import java.util.HashMap;

public class WSSynchronizationPlanStatusCode {
    private java.lang.String value;
    private static Map valueMap = new HashMap();
    public static final String _DOES_NOT_EXISTString = "DOES_NOT_EXIST";
    public static final String _COMPLETEDString = "COMPLETED";
    public static final String _FAILEDString = "FAILED";
    public static final String _RUNNINGString = "RUNNING";
    public static final String _SCHEDULEDString = "SCHEDULED";
    public static final String _STOPPINGString = "STOPPING";
    
    public static final java.lang.String _DOES_NOT_EXIST = new java.lang.String(_DOES_NOT_EXISTString);
    public static final java.lang.String _COMPLETED = new java.lang.String(_COMPLETEDString);
    public static final java.lang.String _FAILED = new java.lang.String(_FAILEDString);
    public static final java.lang.String _RUNNING = new java.lang.String(_RUNNINGString);
    public static final java.lang.String _SCHEDULED = new java.lang.String(_SCHEDULEDString);
    public static final java.lang.String _STOPPING = new java.lang.String(_STOPPINGString);
    
    public static final WSSynchronizationPlanStatusCode DOES_NOT_EXIST = new WSSynchronizationPlanStatusCode(_DOES_NOT_EXIST);
    public static final WSSynchronizationPlanStatusCode COMPLETED = new WSSynchronizationPlanStatusCode(_COMPLETED);
    public static final WSSynchronizationPlanStatusCode FAILED = new WSSynchronizationPlanStatusCode(_FAILED);
    public static final WSSynchronizationPlanStatusCode RUNNING = new WSSynchronizationPlanStatusCode(_RUNNING);
    public static final WSSynchronizationPlanStatusCode SCHEDULED = new WSSynchronizationPlanStatusCode(_SCHEDULED);
    public static final WSSynchronizationPlanStatusCode STOPPING = new WSSynchronizationPlanStatusCode(_STOPPING);
    
    protected WSSynchronizationPlanStatusCode(java.lang.String value) {
        this.value = value;
        valueMap.put(this.toString(), this);
    }
    
    public java.lang.String getValue() {
        return value;
    }
    
    public static WSSynchronizationPlanStatusCode fromValue(java.lang.String value)
        throws java.lang.IllegalStateException {
        if (DOES_NOT_EXIST.value.equals(value)) {
            return DOES_NOT_EXIST;
        } else if (COMPLETED.value.equals(value)) {
            return COMPLETED;
        } else if (FAILED.value.equals(value)) {
            return FAILED;
        } else if (RUNNING.value.equals(value)) {
            return RUNNING;
        } else if (SCHEDULED.value.equals(value)) {
            return SCHEDULED;
        } else if (STOPPING.value.equals(value)) {
            return STOPPING;
        }
        throw new IllegalArgumentException();
    }
    
    public static WSSynchronizationPlanStatusCode fromString(String value)
        throws java.lang.IllegalStateException {
        WSSynchronizationPlanStatusCode ret = (WSSynchronizationPlanStatusCode)valueMap.get(value);
        if (ret != null) {
            return ret;
        }
        if (value.equals(_DOES_NOT_EXISTString)) {
            return DOES_NOT_EXIST;
        } else if (value.equals(_COMPLETEDString)) {
            return COMPLETED;
        } else if (value.equals(_FAILEDString)) {
            return FAILED;
        } else if (value.equals(_RUNNINGString)) {
            return RUNNING;
        } else if (value.equals(_SCHEDULEDString)) {
            return SCHEDULED;
        } else if (value.equals(_STOPPINGString)) {
            return STOPPING;
        }
        throw new IllegalArgumentException();
    }
    
    public String toString() {
        return value.toString();
    }
    
    private Object readResolve()
        throws java.io.ObjectStreamException {
        return fromValue(getValue());
    }
    
    public boolean equals(Object obj) {
        if (!(obj instanceof WSSynchronizationPlanStatusCode)) {
            return false;
        }
        return ((WSSynchronizationPlanStatusCode)obj).value.equals(value);
    }
    
    public int hashCode() {
        return value.hashCode();
    }
}
