// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation ��1.1.2_01������� R40��
// Generated source version: 1.1.2

package com.amalto.webapp.util.webservices;

import com.sun.xml.rpc.client.BasicService;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.*;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.rpc.*;
import javax.xml.rpc.encoding.*;
import javax.xml.namespace.QName;

public class XtentisService_SerializerRegistry implements SerializerConstants {
    public XtentisService_SerializerRegistry() {
    }
    
    public TypeMappingRegistry getRegistry() {
        
        TypeMappingRegistry registry = BasicService.createStandardTypeMappingRegistry();
        TypeMapping mapping12 = registry.getTypeMapping(SOAP12Constants.NS_SOAP_ENCODING);
        TypeMapping mapping = registry.getTypeMapping(SOAPConstants.NS_SOAP_ENCODING);
        TypeMapping mapping2 = registry.getTypeMapping("");
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetRolePKs");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetRolePKs_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetRolePKs.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRemoveDroppedItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRemoveDroppedItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRemoveDroppedItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRoutingEngineV2Status");
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(type, "",
                com.amalto.webapp.util.webservices.WSRoutingEngineV2Status_Encoder.getInstance());
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRoutingEngineV2Status.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExistsDataCluster");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExistsDataCluster_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExistsDataCluster.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDroppedItemPK");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDroppedItemPK_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDroppedItemPK.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformerV2PK");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformerV2PK_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformerV2PK.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSQuickSearch");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSQuickSearch_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSQuickSearch.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformerPluginV2Details");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformerPluginV2Details_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformerPluginV2Details.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetRoutingOrderV2PKsByCriteria");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetRoutingOrderV2PKsByCriteria_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetRoutingOrderV2PKsByCriteria.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationPutObjectXML");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSynchronizationPutObjectXML_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationPutObjectXML.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetVersioningSystemConfiguration");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetVersioningSystemConfiguration_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetVersioningSystemConfiguration.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetDataModel");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetDataModel_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetDataModel.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetConceptsInDataClusterWithRevisions");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetConceptsInDataClusterWithRevisions_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetConceptsInDataClusterWithRevisions.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRegexStoredProcedure");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRegexStoredProcedure_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRegexStoredProcedure.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetTransformerPKs");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetTransformerPKs_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetTransformerPKs.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSWorkflowProcessDefinitionUUID");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSWorkflowProcessDefinitionUUID_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSWorkflowProcessDefinitionUUID.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetSynchronizationPlanPKs");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetSynchronizationPlanPKs_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetSynchronizationPlanPKs.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationGetUnsynchronizedItemPKs");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSynchronizationGetUnsynchronizedItemPKs_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationGetUnsynchronizedItemPKs.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSUniverse-xtentisObjectsRevisionIDs");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSUniverseXtentisObjectsRevisionIDs_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSUniverseXtentisObjectsRevisionIDs.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationItemStatus");
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(type, "",
                com.amalto.webapp.util.webservices.WSSynchronizationItemStatus_Encoder.getInstance());
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationItemStatus.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutBackgroundJob");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutBackgroundJob_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutBackgroundJob.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSWorkflowGetProcessDefinitions");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSWorkflowGetProcessDefinitions_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSWorkflowGetProcessDefinitions.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetSynchronizationPlan");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetSynchronizationPlan_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetSynchronizationPlan.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExtractUsingTransformer");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExtractUsingTransformer_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExtractUsingTransformer.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRoutingOrderV2Status");
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(type, "",
                com.amalto.webapp.util.webservices.WSRoutingOrderV2Status_Encoder.getInstance());
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRoutingOrderV2Status.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSWhereOr");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSWhereOr_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSWhereOr.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSCategoryData");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSCategoryData_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSCategoryData.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExistsMenu");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExistsMenu_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExistsMenu.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetItemPKsByFullCriteria");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetItemPKsByFullCriteria_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetItemPKsByFullCriteria.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformerV2PKArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformerV2PKArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformerV2PKArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSConceptRevisionMap-mapEntry");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSConceptRevisionMapMapEntry_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSConceptRevisionMapMapEntry.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformerContext-projectedItemPKs");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformerContextProjectedItemPKs_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformerContextProjectedItemPKs.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetBackgroundJob");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetBackgroundJob_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetBackgroundJob.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningSystemConfiguration");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningSystemConfiguration_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningSystemConfiguration.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSetTaskPriority");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSetTaskPriority_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSetTaskPriority.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetItemsPivotIndex-pivotWithKeys-typedContentEntry");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetItemsPivotIndexPivotWithKeysTypedContentEntry_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetItemsPivotIndexPivotWithKeysTypedContentEntry.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExistsItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExistsItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExistsItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetSynchronizationPlanItemsAlgorithms");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetSynchronizationPlanItemsAlgorithms_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetSynchronizationPlanItemsAlgorithms.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutVersioningSystemConfiguration");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutVersioningSystemConfiguration_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutVersioningSystemConfiguration.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSFindBackgroundJobPKs");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSFindBackgroundJobPKs_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSFindBackgroundJobPKs.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSI18nString");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSI18NString_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSI18NString.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRolePK");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRolePK_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRolePK.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSProcessTaskInstance");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSProcessTaskInstance_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSProcessTaskInstance.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetMenu");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetMenu_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetMenu.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetUniversePKs");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetUniversePKs_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetUniversePKs.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExtractedContent");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExtractedContent_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExtractedContent.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningRestoreItemByRevision");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningRestoreItemByRevision_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningRestoreItemByRevision.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExistsRoutingOrderV2");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExistsRoutingOrderV2_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExistsRoutingOrderV2.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningGetInfo");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningGetInfo_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningGetInfo.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutRole");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutRole_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutRole.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSStringArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSStringArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSStringArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformerPluginV2PutConfiguration");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformerPluginV2PutConfiguration_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformerPluginV2PutConfiguration.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationGetObjectXML");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSynchronizationGetObjectXML_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationGetObjectXML.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutTransformerV2");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutTransformerV2_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutTransformerV2.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSProcessBytesUsingTransformer-wsOutputDecisionTable-decisions");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSProcessBytesUsingTransformerWsOutputDecisionTableDecisions_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSProcessBytesUsingTransformerWsOutputDecisionTableDecisions.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSHashMap");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSHashMap_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSHashMap.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationItem-remoteInstances");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSynchronizationItemRemoteInstances_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationItemRemoteInstances.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSView");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSView_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSView.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSWhereOperator");
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(type, "",
                com.amalto.webapp.util.webservices.WSWhereOperator_Encoder.getInstance());
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSWhereOperator.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRoutingRuleExpression");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRoutingRuleExpression_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRoutingRuleExpression.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSMenu");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSMenu_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSMenu.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDeleteItemWithReport");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDeleteItemWithReport_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDeleteItemWithReport.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetObjectsForRoles");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetObjectsForRoles_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetObjectsForRoles.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetItems");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetItems_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetItems.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSItemPK");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSItemPK_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSItemPK.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDeleteBusinessConcept");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDeleteBusinessConcept_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDeleteBusinessConcept.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSWorkflowProcessDefinitionUUIDArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSWorkflowProcessDefinitionUUIDArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSWorkflowProcessDefinitionUUIDArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDeleteSynchronizationPlan");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDeleteSynchronizationPlan_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDeleteSynchronizationPlan.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExistsTransformer");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExistsTransformer_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExistsTransformer.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSCheckServiceConfigRequest");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSCheckServiceConfigRequest_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSCheckServiceConfigRequest.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetComponentVersion");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetComponentVersion_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetComponentVersion.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetSynchronizationItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetSynchronizationItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetSynchronizationItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSProcessInstanceArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSProcessInstanceArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSProcessInstanceArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutRoutingRule");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutRoutingRule_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutRoutingRule.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSWorkflowDeleteProcessInstancesRequest");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSWorkflowDeleteProcessInstancesRequest_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSWorkflowDeleteProcessInstancesRequest.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRoutingRuleOperator");
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(type, "",
                com.amalto.webapp.util.webservices.WSRoutingRuleOperator_Encoder.getInstance());
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRoutingRuleOperator.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformerProcessStep");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformerProcessStep_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformerProcessStep.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetView");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetView_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetView.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationPutItemXML");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSynchronizationPutItemXML_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationPutItemXML.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningRestoreItems");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningRestoreItems_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningRestoreItems.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformerContext-pipeline");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformerContextPipeline_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformerContextPipeline.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetTransformer");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetTransformer_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetTransformer.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningUniverseVersions-tagStructure");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningUniverseVersionsTagStructure_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningUniverseVersionsTagStructure.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRegexDataModelPKs");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRegexDataModelPKs_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRegexDataModelPKs.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutDBDataCluster");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutDBDataCluster_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutDBDataCluster.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutView");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutView_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutView.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationPlanPKArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSynchronizationPlanPKArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationPlanPKArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSLoadDroppedItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSLoadDroppedItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSLoadDroppedItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformerContext");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformerContext_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformerContext.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSServicesList-Item");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSServicesListItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSServicesListItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSServiceAction");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSServiceAction_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSServiceAction.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRoutingRule");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRoutingRule_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRoutingRule.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSWhereCondition");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSWhereCondition_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSWhereCondition.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSWorkflowUnDeploy");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSWorkflowUnDeploy_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSWorkflowUnDeploy.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSServiceGetDocument");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSServiceGetDocument_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSServiceGetDocument.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningTagItems");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningTagItems_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningTagItems.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformerPluginSpec");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformerPluginSpec_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformerPluginSpec.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationPlanStatusCode");
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(type, "",
                com.amalto.webapp.util.webservices.WSSynchronizationPlanStatusCode_Encoder.getInstance());
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationPlanStatusCode.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetUniverseByRevisionType");
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(type, "",
                com.amalto.webapp.util.webservices.WSGetUniverseByRevisionType_Encoder.getInstance());
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetUniverseByRevisionType.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSMenuPK");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSMenuPK_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSMenuPK.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDataClusterPKArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDataClusterPKArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDataClusterPKArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSStoredProcedurePK");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSStoredProcedurePK_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSStoredProcedurePK.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRole");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRole_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRole.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDeleteRole");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDeleteRole_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDeleteRole.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationPlan");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSynchronizationPlan_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationPlan.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSLinkedHashMap");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSLinkedHashMap_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSLinkedHashMap.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDeleteView");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDeleteView_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDeleteView.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetObjectsForSynchronizationPlans");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetObjectsForSynchronizationPlans_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetObjectsForSynchronizationPlans.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutBusinessConcept");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutBusinessConcept_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutBusinessConcept.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSUniverse-itemsRevisionIDs");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSUniverseItemsRevisionIDs_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSUniverseItemsRevisionIDs.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSInitData");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSInitData_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSInitData.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSBackgroundJobPK");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSBackgroundJobPK_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSBackgroundJobPK.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSProcessFileUsingTransformerAsBackgroundJob");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSProcessFileUsingTransformerAsBackgroundJob_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSProcessFileUsingTransformerAsBackgroundJob.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationGetUnsynchronizedObjectsIDs");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSynchronizationGetUnsynchronizedObjectsIDs_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationGetUnsynchronizedObjectsIDs.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSMDMJob");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSMDMJob_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSMDMJob.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSMDMNULL");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSMDMNULL_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSMDMNULL.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSString");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSString_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSString.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPUTMDMJob");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPUTMDMJob_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPUTMDMJob.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSAssignTask");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSAssignTask_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSAssignTask.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformerPKArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformerPKArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformerPKArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSUpdateItemArrayMetadata");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSUpdateItemArrayMetadata_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSUpdateItemArrayMetadata.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDeleteRoutingOrderV2");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDeleteRoutingOrderV2_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDeleteRoutingOrderV2.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutBusinessConceptSchema");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutBusinessConceptSchema_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutBusinessConceptSchema.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSConnectorInteraction");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSConnectorInteraction_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSConnectorInteraction.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetCurrentUniverse");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetCurrentUniverse_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetCurrentUniverse.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPipeline");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPipeline_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPipeline.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningGetObjectsVersions");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningGetObjectsVersions_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningGetObjectsVersions.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutSynchronizationItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutSynchronizationItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutSynchronizationItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRoutingOrderV2Array");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRoutingOrderV2Array_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRoutingOrderV2Array.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningTagObjects");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningTagObjects_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningTagObjects.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSKey");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSKey_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSKey.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSByteArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSByteArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSByteArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRolePKArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRolePKArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRolePKArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSViewSearch");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSViewSearch_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSViewSearch.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDeleteRoutingRule");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDeleteRoutingRule_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDeleteRoutingRule.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSItemPKsByCriteriaResponse-results");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSItemPKsByCriteriaResponseResults_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSItemPKsByCriteriaResponseResults.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSProcessFileUsingTransformer");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSProcessFileUsingTransformer_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSProcessFileUsingTransformer.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDeleteDataCluster");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDeleteDataCluster_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDeleteDataCluster.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSOperatorType");
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(type, "",
                com.amalto.webapp.util.webservices.WSOperatorType_Encoder.getInstance());
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSOperatorType.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSBackgroundJobPKArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSBackgroundJobPKArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSBackgroundJobPKArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutUniverse");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutUniverse_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutUniverse.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutMenu");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutMenu_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutMenu.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformerPluginV2sList-Item");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformerPluginV2SListItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformerPluginV2SListItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutDataCluster");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutDataCluster_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutDataCluster.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSComponent");
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(type, "",
                com.amalto.webapp.util.webservices.WSComponent_Encoder.getInstance());
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSComponent.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDeleteStoredProcedure");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDeleteStoredProcedure_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDeleteStoredProcedure.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetTransformerPluginV2sList");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetTransformerPluginV2SList_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetTransformerPluginV2SList.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSResumeTask");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSResumeTask_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSResumeTask.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRoutingRulePKArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRoutingRulePKArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRoutingRulePKArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformerPluginV2VariableDescriptor");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformerPluginV2VariableDescriptor_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformerPluginV2VariableDescriptor.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationPlanPK");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSynchronizationPlanPK_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationPlanPK.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSUniversePK");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSUniversePK_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSUniversePK.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSCheckServiceConfigResponse");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSCheckServiceConfigResponse_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSCheckServiceConfigResponse.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRoutingOrderV2PKArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRoutingOrderV2PKArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRoutingOrderV2PKArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDELMDMJob");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDELMDMJob_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDELMDMJob.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSServicePutConfiguration");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSServicePutConfiguration_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSServicePutConfiguration.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningGetItemHistory");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningGetItemHistory_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningGetItemHistory.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSServiceGetConfiguration");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSServiceGetConfiguration_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSServiceGetConfiguration.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetMenuPKs");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetMenuPKs_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetMenuPKs.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTypedContent");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTypedContent_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTypedContent.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRunQuery");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRunQuery_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRunQuery.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetTransformerV2");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetTransformerV2_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetTransformerV2.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSViewPKArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSViewPKArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSViewPKArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformerPluginV2GetConfiguration");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformerPluginV2GetConfiguration_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformerPluginV2GetConfiguration.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSBusinessConceptPK");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSBusinessConceptPK_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSBusinessConceptPK.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSBoolean");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSBoolean_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSBoolean.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRegexDataClusterPKs");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRegexDataClusterPKs_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRegexDataClusterPKs.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningUniverseVersions");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningUniverseVersions_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningUniverseVersions.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetItemsByCustomFKFilters");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetItemsByCustomFKFilters_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetItemsByCustomFKFilters.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningRestoreUniverse");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningRestoreUniverse_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningRestoreUniverse.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDeleteMenu");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDeleteMenu_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDeleteMenu.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExistsDBDataCluster");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExistsDBDataCluster_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExistsDBDataCluster.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutItemWithReportArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutItemWithReportArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutItemWithReportArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetChildrenItems");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetChildrenItems_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetChildrenItems.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSConnectorFunction");
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(type, "",
                com.amalto.webapp.util.webservices.WSConnectorFunction_Encoder.getInstance());
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSConnectorFunction.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetUniverseByRevision");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetUniverseByRevision_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetUniverseByRevision.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSConceptRevisionMap");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSConceptRevisionMap_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSConceptRevisionMap.class, type, serializer);
        }
        {
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(SchemaConstants.QNAME_TYPE_BASE64_BINARY,
                "", XSDBase64BinaryEncoder.getInstance());
            registerSerializer(mapping2,byte[].class, SchemaConstants.QNAME_TYPE_BASE64_BINARY, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSStoredProcedure");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSStoredProcedure_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSStoredProcedure.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPing");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPing_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPing.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutDataModel");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutDataModel_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutDataModel.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSWorkflowGetTaskList");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSWorkflowGetTaskList_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSWorkflowGetTaskList.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationPlanActionCode");
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(type, "",
                com.amalto.webapp.util.webservices.WSSynchronizationPlanActionCode_Encoder.getInstance());
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationPlanActionCode.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetUniverse");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetUniverse_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetUniverse.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSMenu-menuEntries-descriptions");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSMenuMenuEntriesDescriptions_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSMenuMenuEntriesDescriptions.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDeleteTransformerV2");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDeleteTransformerV2_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDeleteTransformerV2.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationPlan-xtentisObjectsSynchronizations");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSynchronizationPlanXtentisObjectsSynchronizations_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationPlanXtentisObjectsSynchronizations.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningObjectsVersions");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningObjectsVersions_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningObjectsVersions.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDataModelPK");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDataModelPK_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDataModelPK.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRefreshCache");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRefreshCache_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRefreshCache.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutStoredProcedure");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutStoredProcedure_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutStoredProcedure.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExistsSynchronizationPlan");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExistsSynchronizationPlan_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExistsSynchronizationPlan.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSynchronizationItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningItemsVersions");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningItemsVersions_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningItemsVersions.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDeleteItems");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDeleteItems_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDeleteItems.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetBusinessConceptValue");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetBusinessConceptValue_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetBusinessConceptValue.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetSynchronizationItemPKs");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetSynchronizationItemPKs_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetSynchronizationItemPKs.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSServicesList");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSServicesList_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSServicesList.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSStartProcessInstance-variable-entry");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSStartProcessInstanceVariableEntry_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSStartProcessInstanceVariableEntry.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSProcessTaskInstanceArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSProcessTaskInstanceArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSProcessTaskInstanceArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningObjectsVersions-objects");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningObjectsVersionsObjects_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningObjectsVersionsObjects.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformerV2");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformerV2_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformerV2.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSStartProcessInstance");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSStartProcessInstance_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSStartProcessInstance.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExistsDataModel");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExistsDataModel_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExistsDataModel.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExistsSynchronizationItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExistsSynchronizationItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExistsSynchronizationItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDeleteSynchronizationItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDeleteSynchronizationItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDeleteSynchronizationItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformerContext-pipeline-pipelineItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformerContextPipelinePipelineItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformerContextPipelinePipelineItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSWhereAnd");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSWhereAnd_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSWhereAnd.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSBusinessConcept");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSBusinessConcept_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSBusinessConcept.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningGetUniverseVersions");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningGetUniverseVersions_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningGetUniverseVersions.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetRoutingOrderV2");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetRoutingOrderV2_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetRoutingOrderV2.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExistsRole");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExistsRole_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExistsRole.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetItemPKsByCriteria");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetItemPKsByCriteria_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetItemPKsByCriteria.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutItemWithReport");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutItemWithReport_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutItemWithReport.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationPlan-xtentisObjectsSynchronizations-synchronizations");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSynchronizationPlanXtentisObjectsSynchronizationsSynchronizations_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationPlanXtentisObjectsSynchronizationsSynchronizations.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSUniverse");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSUniverse_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSUniverse.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRole-specification-instance");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRoleSpecificationInstance_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRoleSpecificationInstance.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetRoutingRule");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetRoutingRule_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetRoutingRule.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSUnassignTask");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSUnassignTask_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSUnassignTask.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningItemsVersions-items");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningItemsVersionsItems_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningItemsVersionsItems.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetDataCluster");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetDataCluster_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetDataCluster.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSuspendTask");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSuspendTask_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSuspendTask.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSXPathsSearch");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSXPathsSearch_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSXPathsSearch.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutTransformer");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutTransformer_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutTransformer.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningTagUniverse");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningTagUniverse_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningTagUniverse.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationPlan-itemsSynchronizations");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSynchronizationPlanItemsSynchronizations_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationPlanItemsSynchronizations.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetItemsSort");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetItemsSort_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetItemsSort.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformerPK");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformerPK_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformerPK.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRoutingOrderV2");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRoutingOrderV2_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRoutingOrderV2.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSMenuPKArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSMenuPKArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSMenuPKArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExecuteRoutingOrderV2Asynchronously");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExecuteRoutingOrderV2Asynchronously_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExecuteRoutingOrderV2Asynchronously.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetSynchronizationPlanObjectsAlgorithms");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetSynchronizationPlanObjectsAlgorithms_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetSynchronizationPlanObjectsAlgorithms.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSItemPKArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSItemPKArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSItemPKArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetTransformerPluginV2Details");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetTransformerPluginV2Details_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetTransformerPluginV2Details.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetBusinessConcepts");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetBusinessConcepts_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetBusinessConcepts.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDataCluster");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDataCluster_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDataCluster.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningHistoryEntry");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningHistoryEntry_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningHistoryEntry.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetObjectsForUniverses");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetObjectsForUniverses_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetObjectsForUniverses.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExistsTransformerPluginV2");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExistsTransformerPluginV2_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExistsTransformerPluginV2.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningRestoreObjects");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningRestoreObjects_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningRestoreObjects.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetViewPKs");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetViewPKs_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetViewPKs.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDroppedItemPKArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDroppedItemPKArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDroppedItemPKArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExistsUniverse");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExistsUniverse_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExistsUniverse.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationItemPKArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSynchronizationItemPKArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationItemPKArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRoutingEngineV2Action");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRoutingEngineV2Action_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRoutingEngineV2Action.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExistsTransformerV2");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExistsTransformerV2_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExistsTransformerV2.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSConnectorResponseCode");
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(type, "",
                com.amalto.webapp.util.webservices.WSConnectorResponseCode_Encoder.getInstance());
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSConnectorResponseCode.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutItemByOperatorType");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutItemByOperatorType_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutItemByOperatorType.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSWorkflowDeploy");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSWorkflowDeploy_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSWorkflowDeploy.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPartialPutItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPartialPutItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPartialPutItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningGetItemsVersions");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningGetItemsVersions_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningGetItemsVersions.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExistsRoutingRule");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExistsRoutingRule_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExistsRoutingRule.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExecuteTransformerV2AsJob");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExecuteTransformerV2AsJob_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExecuteTransformerV2AsJob.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExtractUsingTransformerThruView");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExtractUsingTransformerThruView_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExtractUsingTransformerThruView.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformerVariablesMapping");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformerVariablesMapping_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformerVariablesMapping.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetTransformerV2PKs");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetTransformerV2PKs_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetTransformerV2PKs.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutSynchronizationPlan");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutSynchronizationPlan_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutSynchronizationPlan.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformerPluginV2sList");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformerPluginV2SList_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformerPluginV2SList.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExecuteTransformerV2");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExecuteTransformerV2_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExecuteTransformerV2.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningCommitItems");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningCommitItems_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningCommitItems.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetRoutingOrderV2sByCriteria");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetRoutingOrderV2SByCriteria_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetRoutingOrderV2SByCriteria.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRecoverDroppedItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRecoverDroppedItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRecoverDroppedItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSViewPK");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSViewPK_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSViewPK.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSProcessBytesUsingTransformer");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSProcessBytesUsingTransformer_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSProcessBytesUsingTransformer.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersion");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersion_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersion.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRoutingOrderV2PK");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRoutingOrderV2PK_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRoutingOrderV2PK.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSBackgroundJob");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSBackgroundJob_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSBackgroundJob.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSAutoIncrement");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSAutoIncrement_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSAutoIncrement.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExistsView");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExistsView_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExistsView.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSInt");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSInt_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSInt.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDeleteItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDeleteItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDeleteItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSConceptKey");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSConceptKey_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSConceptKey.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExecuteStoredProcedure");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExecuteStoredProcedure_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExecuteStoredProcedure.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetBusinessConceptKey");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetBusinessConceptKey_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetBusinessConceptKey.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSMenuEntry");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSMenuEntry_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSMenuEntry.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSBase64KeyValue");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSBase64KeyValue_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSBase64KeyValue.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetRole");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetRole_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetRole.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDataModel");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDataModel_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDataModel.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSMDMJobArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSMDMJobArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSMDMJobArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDropItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDropItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDropItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRouteItemV2");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRouteItemV2_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRouteItemV2.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetItemsPivotIndex");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetItemsPivotIndex_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetItemsPivotIndex.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSItemPKsByCriteriaResponse");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSItemPKsByCriteriaResponse_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSItemPKsByCriteriaResponse.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSWhereItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSWhereItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSWhereItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationItemPK");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSynchronizationItemPK_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationItemPK.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutItemArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutItemArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutItemArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSOutputDecisionTable");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSOutputDecisionTable_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSOutputDecisionTable.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetConceptsInDataCluster");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetConceptsInDataCluster_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetConceptsInDataCluster.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSFindAllDroppedItemsPKs");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSFindAllDroppedItemsPKs_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSFindAllDroppedItemsPKs.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSTransformer");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSTransformer_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSTransformer.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDroppedItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDroppedItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDroppedItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSProcessInstance");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSProcessInstance_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSProcessInstance.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetServicesList");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetServicesList_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetServicesList.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDataClusterPK");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDataClusterPK_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDataClusterPK.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExistsStoredProcedure");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExistsStoredProcedure_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExistsStoredProcedure.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExtractThroughTransformerV2");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExtractThroughTransformerV2_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExtractThroughTransformerV2.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPipeline-typedContentEntry");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPipelineTypedContentEntry_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPipelineTypedContentEntry.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetRoutingRulePKs");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetRoutingRulePKs_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetRoutingRulePKs.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDeleteUniverse");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDeleteUniverse_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDeleteUniverse.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSConnectorInteractionResponse");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSConnectorInteractionResponse_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSConnectorInteractionResponse.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSResolveSynchronizationItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSResolveSynchronizationItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSResolveSynchronizationItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSCount");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSCount_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSCount.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSLanguage");
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(type, "",
                com.amalto.webapp.util.webservices.WSLanguage_Encoder.getInstance());
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSLanguage.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetFullPathValues");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetFullPathValues_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetFullPathValues.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSServiceActionCode");
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(type, "",
                com.amalto.webapp.util.webservices.WSServiceActionCode_Encoder.getInstance());
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSServiceActionCode.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningItemHistory");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningItemHistory_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningItemHistory.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRole-specification");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRoleSpecification_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRoleSpecification.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSProcessBytesUsingTransformerAsBackgroundJob");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSProcessBytesUsingTransformerAsBackgroundJob_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSProcessBytesUsingTransformerAsBackgroundJob.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSCheckSchema");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSCheckSchema_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSCheckSchema.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationGetItemXML");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSynchronizationGetItemXML_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationGetItemXML.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRoutingOrderV2SearchCriteria");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRoutingOrderV2SearchCriteria_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRoutingOrderV2SearchCriteria.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSIsItemModifiedByOther");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSIsItemModifiedByOther_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSIsItemModifiedByOther.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningInfo");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningInfo_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningInfo.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRoutingRulePK");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSRoutingRulePK_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRoutingRulePK.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSWorkflowGetProcessInstances");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSWorkflowGetProcessInstances_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSWorkflowGetProcessInstances.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationPlanStatus");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSynchronizationPlanStatus_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationPlanStatus.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSGetStoredProcedure");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSGetStoredProcedure_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSGetStoredProcedure.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "BackgroundJobStatusType");
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(type, "",
                com.amalto.webapp.util.webservices.BackgroundJobStatusType_Encoder.getInstance());
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.BackgroundJobStatusType.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSExecuteRoutingOrderV2Synchronously");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSExecuteRoutingOrderV2Synchronously_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSExecuteRoutingOrderV2Synchronously.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSRoutingEngineV2ActionCode");
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(type, "",
                com.amalto.webapp.util.webservices.WSRoutingEngineV2ActionCode_Encoder.getInstance());
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSRoutingEngineV2ActionCode.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSUpdateMetadataItem");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSUpdateMetadataItem_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSUpdateMetadataItem.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSMDMConfig");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSMDMConfig_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSMDMConfig.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDeleteDataModel");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDeleteDataModel_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDeleteDataModel.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSPutItemWithCustomReport");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSPutItemWithCustomReport_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSPutItemWithCustomReport.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDeleteTransformer");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDeleteTransformer_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDeleteTransformer.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSDataModelPKArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSDataModelPKArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSDataModelPKArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSLogout");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSLogout_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSLogout.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSStoredProcedurePKArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSStoredProcedurePKArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSStoredProcedurePKArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSUniversePKArray");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSUniversePKArray_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSUniversePKArray.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSVersioningGetItemContent");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSVersioningGetItemContent_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSVersioningGetItemContent.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSSynchronizationPlanAction");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSSynchronizationPlanAction_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSSynchronizationPlanAction.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSCountItemsByCustomFKFilters");
            CombinedSerializer serializer = new com.amalto.webapp.util.webservices.WSCountItemsByCustomFKFilters_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSCountItemsByCustomFKFilters.class, type, serializer);
        }
        {
            QName type = new QName("urn-com-amalto-xtentis-webservice", "WSStringPredicate");
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(type, "",
                com.amalto.webapp.util.webservices.WSStringPredicate_Encoder.getInstance());
            registerSerializer(mapping2,com.amalto.webapp.util.webservices.WSStringPredicate.class, type, serializer);
        }
        return registry;
    }
    
    private static void registerSerializer(TypeMapping mapping, Class javaType, QName xmlType,
        Serializer ser) {
        mapping.register(javaType, xmlType, new SingletonSerializerFactory(ser),
            new SingletonDeserializerFactory((Deserializer)ser));
    }
    
}
