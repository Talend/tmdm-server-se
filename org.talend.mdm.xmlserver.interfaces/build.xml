<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== 

     Xtentis MDM
     XML server Interface
                   
     bgrieder                                                                
     ====================================================================== -->
<project name="MDM-XmlServer" xmlns:artifact="antlib:org.apache.maven.artifact.ant" default="all">
    <description>
    	XML server Interface
    </description>
	
    <property file="build.properties" />

    <target name="prepare-maven" if="local.developer.build">
        <path id="maven-ant-tasks.classpath" path="${maven.ant.tasks.file}" />
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />
    </target>

	<property name="jar" value="z.mdm.xmlserver.jar"/>
	
	
	<!--  DO  NOT CHANGE ANYTHING BELOW THIS LINE  -->
	
	<property name="version.props" value="version.properties"/>
	
    <property name="build.dir" value="${basedir}/target" />
    <property name="jboss.dir" value="${jboss.dir}" />
    <property name="jboss.instance.dir" value="${jboss.dir}/server/default" />
    <property name="jboss.instance.lib" value="${jboss.instance.dir}/lib"/>
    <property name="jboss.deploy.dir" value="${jboss.instance.dir}/deploy" />


    <!-- ================================= 
          target: all              
         ================================= -->
    <target name="all" depends="clean,version,package,undeploy,deploy">
		<!--eclipse.refreshLocal resource="org.talend.mdm.xmlserver.interfaces"/-->
    </target>

    <target name="clean">
        <antcall target="mvn.invoke">
            <param name="mvn.goal" value="clean" />
        </antcall>
    </target>
    
    <target name="compile">
        <antcall target="mvn.invoke">
            <param name="mvn.goal" value="compile" />
        </antcall>

        <copy todir="bin">
           <fileset dir="target/classes" includes="**" />
        </copy>
    </target>
	
    <target name="version"  description="Maintain build.date property">
       	<propertyfile file="${version.props}"  comment="streek build date">
       		<entry key="build.date" type="date" value="now" />
       	</propertyfile>
     </target>

   	<target name="package" depends="compile">
		<buildnumber file="${version.props}"/>
		<property file="${version.props}" />
   	   	<property name="version.build.new" value="${major}-${minor}-${rev}_${build.number}"  />
   		<jar destfile="${jar}">
   			<zipfileset dir=".">
   				<include name="version.properties"/>
   			</zipfileset>
   			<zipfileset dir=".">
   				<include name="RELEASE.NOTES"/>
   			</zipfileset>
   			<zipfileset dir="bin" includes="**/*.class"/>
   		</jar>
    </target>
		
    <target name="undeploy" description="--> remove packages">
    	<!-- delete 2+ version -->
		<delete file="${jboss.instance.lib}/${jar}"/>
    </target>
	
	<target name="deploy">
		<echo>Deploying build: ${version.build.new}</echo>
		<copy file="${jar}" tofile="${jboss.instance.lib}/${jar}"/>
    </target>

    <target name="mvn.invoke" description="invokes maven" depends="prepare-maven">
        <property environment="env" />

        <artifact:mvn pom="pom.xml" mavenHome="${env.M2_HOME}" fork="true" failonerror="true">
            <arg value="-V" />
            <arg value="-Dmdm.build.dir=${build.dir}" />
            <arg value="-Dmdm.build.version=${mdm.build.version}" />
            <arg value="-Ddev.mode.excluded.start=${dev.mode.excluded.start}" />
            <arg value="-Ddev.mode.excluded.end=${dev.mode.excluded.end}" />
            <arg value="${mvn.goal}" />
        </artifact:mvn>
    </target>
</project>

